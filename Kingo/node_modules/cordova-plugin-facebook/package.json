{
  "_args": [
    [
      {
        "raw": "cordova-plugin-facebook@^0.2.2",
        "scope": null,
        "escapedName": "cordova-plugin-facebook",
        "name": "cordova-plugin-facebook",
        "rawSpec": "^0.2.2",
        "spec": ">=0.2.2 <0.3.0",
        "type": "range"
      },
      "/home/webskitters/Projects/Kingo/node_modules"
    ]
  ],
  "_from": "cordova-plugin-facebook@>=0.2.2 <0.3.0",
  "_id": "cordova-plugin-facebook@0.2.2",
  "_inCache": true,
  "_location": "/cordova-plugin-facebook",
  "_nodeVersion": "0.12.4",
  "_npmUser": {
    "name": "bisrael",
    "email": "blake.israel@gatech.edu"
  },
  "_npmVersion": "2.10.1",
  "_phantomChildren": {},
  "_requested": {
    "raw": "cordova-plugin-facebook@^0.2.2",
    "scope": null,
    "escapedName": "cordova-plugin-facebook",
    "name": "cordova-plugin-facebook",
    "rawSpec": "^0.2.2",
    "spec": ">=0.2.2 <0.3.0",
    "type": "range"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/cordova-plugin-facebook/-/cordova-plugin-facebook-0.2.2.tgz",
  "_shasum": "a9bb57d8c3b8a4017a6a288b823b02df8f13f414",
  "_shrinkwrap": null,
  "_spec": "cordova-plugin-facebook@^0.2.2",
  "_where": "/home/webskitters/Projects/Kingo/node_modules",
  "author": {
    "name": "Blake Israel"
  },
  "bugs": {
    "url": "https://github.com/bisrael/cordova-plugin-facebook/issues"
  },
  "dependencies": {},
  "description": "A Facebook plugin for Cordova 5.0.0+",
  "devDependencies": {},
  "directories": {},
  "dist": {
    "shasum": "a9bb57d8c3b8a4017a6a288b823b02df8f13f414",
    "tarball": "https://registry.npmjs.org/cordova-plugin-facebook/-/cordova-plugin-facebook-0.2.2.tgz"
  },
  "gitHead": "cb1b1edef4dc14a233287b39d89fc7c84d4cc04f",
  "homepage": "https://github.com/bisrael/cordova-plugin-facebook#readme",
  "keywords": [
    "cordova",
    "facebook"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "bisrael",
      "email": "blake.israel@gatech.edu"
    }
  ],
  "name": "cordova-plugin-facebook",
  "optionalDependencies": {},
  "readme": "# CordovaFacebook\n\n### Facebook Plugin for Cordova 5.0+\n\n## Supports:\n\n- Cordova >= 5.0.0\n- iOS and Android\n- Login, Graph Requests, App Events\n\n## Get the Plugin:\n\n```shell\n$> cordova plugin add cordova-plugin-facebook --variable FACEBOOK_DISPLAY_NAME=<Your App Name> --variable FACEBOOK_APP_ID=<Your App ID> [--save]\n```\n\n## Using the Plugin:\n\nCordovaFacebook defines a single variable on `window`: `window.CordovaFacebook`.\n\n## Callbacks:\n\nAll `CordovaFacebook` methods accept exactly one argument: `options`, of type `Object`.\n\nPassing in a function as `options.onSuccess` or `options.onFailure` will allow you to listen to the result of that method.\n\nBoth `onSuccess` and `onFailure` callbacks will generally be passed one argument (whose type may vary) as the result.\n\n## `CordovaFacebook.login`\n\nThe `CordovaFacebook.login` method accepts a `permissions` field in addition to the standard callbacks.\n\n- `permissions` _(optional)_ - an array of Facebook permissions you are asking for from the user. `\"public_profile\"` is always requested. See [Facebook's Docs](https://developers.facebook.com/docs/facebook-login/permissions/v2.4) for more information.\n\nBoth `onSuccess` and `onFailure` receive a single `result` object, with the following properties:\n\n- `result.error` - `1` if there was an error, `0` otherwise.\n- `result.success` - `1` if the user accepted the login request, `0` otherwise.\n- `result.cancelled` - `1` if the user cancelled the login request, `0` otherwise.\n- `result.errorCode` _(if `error` is 1)_ - Facebook's error code for what went wrong. `0` is a network failure, `304` is a login mismatch (call `logout` before trying again). See [Facebook List of Error Codes](https://developers.facebook.com/docs/graph-api/using-graph-api/v2.4#errors).\n- `result.errorLocalized` _(if `error` is 1)_ - Facebook's localized description of what went wrong, in the current locale.\n- `result.granted` _(if `success` is 1)_ - An array of the permissions the user approved.\n- `result.declined` _(if `success` is 1)_ - An array of the permissions the user declined.\n- `result.accessToken` _(if available)_ - The Facebook Access Token for the User.\n- `result.userID` _(if available)_ - The Facebook User ID for the User.\n\nExample usage:\n\n```javascript\nCordovaFacebook.login({\n   permissions: ['email', 'user_likes'],\n   onSuccess: function(result) {\n      if(result.declined.length > 0) {\n         alert(\"The User declined something!\");\n      }\n      /* ... */\n   },\n   onFailure: function(result) {\n      if(result.cancelled) {\n         alert(\"The user doesn't like my app\");\n      } else if(result.error) {\n         alert(\"There was an error:\" + result.errorLocalized);\n      }\n   }\n});\n```\n\n## `CordovaFacebook.logout`\n\nThe `CordovaFacebook.logout` method does not have any additional options other than the standard callbacks.\n\nAdditionally, the `logout` method will always succeed, and never fail. (Meaning `onFailure` will never be called).\n\nThe `onSuccess` callback is not passed any arguments.\n\nExample usage:\n\n```javascript\nCordovaFacebook.logout({\n   onSuccess: function() {\n      alert(\"The user is now logged out\");\n   }\n});\n\n// Unless you need to wait for the native sdk to do its thing,\n// you dont even really need to use a callback:\nCordovaFacebook.logout();\n```\n\n\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/bisrael/cordova-plugin-facebook.git"
  },
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "version": "0.2.2"
}
